"""
Django settings for pdc project.

Generated by 'django-admin startproject' using Django 3.2.15.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

SECRET_KEY = os.environ.get('SECRET_KEY')

ENV = os.environ.get('ENV')

if ENV == "development":
    DEBUG = True
    ALLOWED_HOSTS = []
    STATIC_ROOT = 'static_root'
    MEDIA_ROOT = 'media_root'
else:
    DEBUG = False
    ALLOWED_HOSTS = ['petersburgdemocrats.org']

    # Security settings
    SECURE_SSL_REDIRECT = True
    SESSION_COOKIE_SECURE = True
    CSRF_COOKIE_SECURE = True
    SECURE_HSTS_SECONDS = 3600
    SECURE_HSTS_INCLUDE_SUBDOMAINS = True
    SECURE_HSTS_PRELOAD = True

    # Static files
    STATIC_ROOT = '/var/www/static/'
    MEDIA_ROOT = '/var/www/media/'

# Security

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.redirects',
    'django.contrib.sessions',
    'django.contrib.sites',
    'django.contrib.sitemaps',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # 3rd party apps
    'sass_processor',  # sass compiler
    'ckeditor',  # rich text editor
    'solo',  # allows for singleton models
    'meta',  # metadata
    'captcha',  # google recaptcha
    'cabinet',  # media manager
    'imagefield',  # required for cabinet

    # PDC apps
    'pdc',
    'news',
    'pages',
    'events',
    'elections',
]

SITE_ID = 1

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'pdc.middleware.TemporaryRedirectMiddleware',
]

ROOT_URLCONF = 'pdc.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            'templates',
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'pdc.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.environ.get('POSTGRES_NAME'),
        'USER': os.environ.get('POSTGRES_USER'),
        'PASSWORD': os.environ.get('POSTGRES_PASSWORD'),
        'HOST': os.environ.get('POSTGRES_HOST'),
        'PORT': 5432,
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',  # noqa: E501
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',  # noqa: E501
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',  # noqa: E501
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',  # noqa: E501
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
MEDIA_URL = '/media/'

STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    'sass_processor.finders.CssFinder',
]

STATICFILES_DIRS = [
    BASE_DIR / "static",
]

SASS_PROCESSOR_INCLUDE_DIRS = [
    BASE_DIR / "static",
]

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Meta settings
META_INCLUDE_KEYWORDS = ['Petersburg', 'Democrats']
META_DEFAULT_KEYWORDS = META_INCLUDE_KEYWORDS
META_USE_OG_PROPERTIES = True
META_USE_SCHEMAORG_PROPERTIES = True
META_USE_TWITTER_PROPERTIES = True
META_SITE_PROTOCOL = 'https'
META_SITE_DOMAIN = 'petersburgdemocrats.org'
META_SITE_TYPE = 'website'
META_SITE_NAME = 'Petersburg Democrats'
# META_FB_PAGES= 'Add this later'

# Email
EMAIL_HOST = os.getenv("EMAIL_HOST")
EMAIL_PORT = os.getenv("EMAIL_PORT")
EMAIL_HOST_USER = os.getenv("EMAIL_HOST_USER")
EMAIL_HOST_PASSWORD = os.getenv("EMAIL_HOST_PASSWORD")
EMAIL_USE_SSL = True
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER
SERVER_EMAIL = EMAIL_HOST_USER
ADMINS = [
    ("Mike", "mherring@gmail.com"),
    ("Info", "info@petersburgdemocrats.org"),
]

# Google recaptcha
RECAPTCHA_PUBLIC_KEY = os.getenv("GOOGLE_SITE_KEY")
RECAPTCHA_PRIVATE_KEY = os.getenv("GOOGLE_SECRET_KEY")

# CKEditor
CKEDITOR_CONFIGS = {
    'default': {
        'filebrowserBrowseUrl': '/admin/cabinet/file/?_popup=1',
        'filebrowserImageUrl': (
            '/admin/cabinet/file/?_popup=1&file_type=image_file'
        ),
    },
}
